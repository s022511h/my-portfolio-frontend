{"version":3,"file":"js/440.1a4ef9fe.js","mappings":"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","sources":["webpack://my-portfolio/./node_modules/hookable/dist/index.mjs","webpack://my-portfolio/./node_modules/@firebase/util/dist/postinstall.mjs","webpack://my-portfolio/../src/crypt.ts","webpack://my-portfolio/../src/global.ts","webpack://my-portfolio/../src/defaults.ts","webpack://my-portfolio/../src/deferred.ts","webpack://my-portfolio/../src/url.ts","webpack://my-portfolio/../src/emulator.ts","webpack://my-portfolio/../src/environment.ts","webpack://my-portfolio/../src/errors.ts","webpack://my-portfolio/../src/obj.ts","webpack://my-portfolio/../src/query.ts","webpack://my-portfolio/../src/subscribe.ts","webpack://my-portfolio/../src/compat.ts","webpack://my-portfolio/../../src/component.ts","webpack://my-portfolio/../../src/constants.ts","webpack://my-portfolio/../../src/provider.ts","webpack://my-portfolio/../../src/component_container.ts","webpack://my-portfolio/../../src/logger.ts","webpack://my-portfolio/../../index.ts","webpack://my-portfolio/../../src/platformLoggerService.ts","webpack://my-portfolio/../../src/internal.ts","webpack://my-portfolio/../../src/errors.ts","webpack://my-portfolio/../../src/firebaseApp.ts","webpack://my-portfolio/../../src/api.ts","webpack://my-portfolio/../../src/indexeddb.ts","webpack://my-portfolio/../../src/heartbeatService.ts","webpack://my-portfolio/../../src/registerCoreComponents.ts","webpack://my-portfolio/../../src/index.ts"],"sourcesContent":["function flatHooks(configHooks, hooks = {}, parentName) {\n  for (const key in configHooks) {\n    const subHook = configHooks[key];\n    const name = parentName ? `${parentName}:${key}` : key;\n    if (typeof subHook === \"object\" && subHook !== null) {\n      flatHooks(subHook, hooks, name);\n    } else if (typeof subHook === \"function\") {\n      hooks[name] = subHook;\n    }\n  }\n  return hooks;\n}\nfunction mergeHooks(...hooks) {\n  const finalHooks = {};\n  for (const hook of hooks) {\n    const flatenHook = flatHooks(hook);\n    for (const key in flatenHook) {\n      if (finalHooks[key]) {\n        finalHooks[key].push(flatenHook[key]);\n      } else {\n        finalHooks[key] = [flatenHook[key]];\n      }\n    }\n  }\n  for (const key in finalHooks) {\n    if (finalHooks[key].length > 1) {\n      const array = finalHooks[key];\n      finalHooks[key] = (...arguments_) => serial(array, (function_) => function_(...arguments_));\n    } else {\n      finalHooks[key] = finalHooks[key][0];\n    }\n  }\n  return finalHooks;\n}\nfunction serial(tasks, function_) {\n  return tasks.reduce(\n    (promise, task) => promise.then(() => function_(task)),\n    Promise.resolve()\n  );\n}\nconst defaultTask = { run: (function_) => function_() };\nconst _createTask = () => defaultTask;\nconst createTask = typeof console.createTask !== \"undefined\" ? console.createTask : _createTask;\nfunction serialTaskCaller(hooks, args) {\n  const name = args.shift();\n  const task = createTask(name);\n  return hooks.reduce(\n    (promise, hookFunction) => promise.then(() => task.run(() => hookFunction(...args))),\n    Promise.resolve()\n  );\n}\nfunction parallelTaskCaller(hooks, args) {\n  const name = args.shift();\n  const task = createTask(name);\n  return Promise.all(hooks.map((hook) => task.run(() => hook(...args))));\n}\nfunction serialCaller(hooks, arguments_) {\n  return hooks.reduce(\n    (promise, hookFunction) => promise.then(() => hookFunction(...arguments_ || [])),\n    Promise.resolve()\n  );\n}\nfunction parallelCaller(hooks, args) {\n  return Promise.all(hooks.map((hook) => hook(...args || [])));\n}\nfunction callEachWith(callbacks, arg0) {\n  for (const callback of [...callbacks]) {\n    callback(arg0);\n  }\n}\n\nclass Hookable {\n  constructor() {\n    this._hooks = {};\n    this._before = void 0;\n    this._after = void 0;\n    this._deprecatedMessages = void 0;\n    this._deprecatedHooks = {};\n    this.hook = this.hook.bind(this);\n    this.callHook = this.callHook.bind(this);\n    this.callHookWith = this.callHookWith.bind(this);\n  }\n  hook(name, function_, options = {}) {\n    if (!name || typeof function_ !== \"function\") {\n      return () => {\n      };\n    }\n    const originalName = name;\n    let dep;\n    while (this._deprecatedHooks[name]) {\n      dep = this._deprecatedHooks[name];\n      name = dep.to;\n    }\n    if (dep && !options.allowDeprecated) {\n      let message = dep.message;\n      if (!message) {\n        message = `${originalName} hook has been deprecated` + (dep.to ? `, please use ${dep.to}` : \"\");\n      }\n      if (!this._deprecatedMessages) {\n        this._deprecatedMessages = /* @__PURE__ */ new Set();\n      }\n      if (!this._deprecatedMessages.has(message)) {\n        console.warn(message);\n        this._deprecatedMessages.add(message);\n      }\n    }\n    if (!function_.name) {\n      try {\n        Object.defineProperty(function_, \"name\", {\n          get: () => \"_\" + name.replace(/\\W+/g, \"_\") + \"_hook_cb\",\n          configurable: true\n        });\n      } catch {\n      }\n    }\n    this._hooks[name] = this._hooks[name] || [];\n    this._hooks[name].push(function_);\n    return () => {\n      if (function_) {\n        this.removeHook(name, function_);\n        function_ = void 0;\n      }\n    };\n  }\n  hookOnce(name, function_) {\n    let _unreg;\n    let _function = (...arguments_) => {\n      if (typeof _unreg === \"function\") {\n        _unreg();\n      }\n      _unreg = void 0;\n      _function = void 0;\n      return function_(...arguments_);\n    };\n    _unreg = this.hook(name, _function);\n    return _unreg;\n  }\n  removeHook(name, function_) {\n    if (this._hooks[name]) {\n      const index = this._hooks[name].indexOf(function_);\n      if (index !== -1) {\n        this._hooks[name].splice(index, 1);\n      }\n      if (this._hooks[name].length === 0) {\n        delete this._hooks[name];\n      }\n    }\n  }\n  deprecateHook(name, deprecated) {\n    this._deprecatedHooks[name] = typeof deprecated === \"string\" ? { to: deprecated } : deprecated;\n    const _hooks = this._hooks[name] || [];\n    delete this._hooks[name];\n    for (const hook of _hooks) {\n      this.hook(name, hook);\n    }\n  }\n  deprecateHooks(deprecatedHooks) {\n    Object.assign(this._deprecatedHooks, deprecatedHooks);\n    for (const name in deprecatedHooks) {\n      this.deprecateHook(name, deprecatedHooks[name]);\n    }\n  }\n  addHooks(configHooks) {\n    const hooks = flatHooks(configHooks);\n    const removeFns = Object.keys(hooks).map(\n      (key) => this.hook(key, hooks[key])\n    );\n    return () => {\n      for (const unreg of removeFns.splice(0, removeFns.length)) {\n        unreg();\n      }\n    };\n  }\n  removeHooks(configHooks) {\n    const hooks = flatHooks(configHooks);\n    for (const key in hooks) {\n      this.removeHook(key, hooks[key]);\n    }\n  }\n  removeAllHooks() {\n    for (const key in this._hooks) {\n      delete this._hooks[key];\n    }\n  }\n  callHook(name, ...arguments_) {\n    arguments_.unshift(name);\n    return this.callHookWith(serialTaskCaller, name, ...arguments_);\n  }\n  callHookParallel(name, ...arguments_) {\n    arguments_.unshift(name);\n    return this.callHookWith(parallelTaskCaller, name, ...arguments_);\n  }\n  callHookWith(caller, name, ...arguments_) {\n    const event = this._before || this._after ? { name, args: arguments_, context: {} } : void 0;\n    if (this._before) {\n      callEachWith(this._before, event);\n    }\n    const result = caller(\n      name in this._hooks ? [...this._hooks[name]] : [],\n      arguments_\n    );\n    if (result instanceof Promise) {\n      return result.finally(() => {\n        if (this._after && event) {\n          callEachWith(this._after, event);\n        }\n      });\n    }\n    if (this._after && event) {\n      callEachWith(this._after, event);\n    }\n    return result;\n  }\n  beforeEach(function_) {\n    this._before = this._before || [];\n    this._before.push(function_);\n    return () => {\n      if (this._before !== void 0) {\n        const index = this._before.indexOf(function_);\n        if (index !== -1) {\n          this._before.splice(index, 1);\n        }\n      }\n    };\n  }\n  afterEach(function_) {\n    this._after = this._after || [];\n    this._after.push(function_);\n    return () => {\n      if (this._after !== void 0) {\n        const index = this._after.indexOf(function_);\n        if (index !== -1) {\n          this._after.splice(index, 1);\n        }\n      }\n    };\n  }\n}\nfunction createHooks() {\n  return new Hookable();\n}\n\nconst isBrowser = typeof window !== \"undefined\";\nfunction createDebugger(hooks, _options = {}) {\n  const options = {\n    inspect: isBrowser,\n    group: isBrowser,\n    filter: () => true,\n    ..._options\n  };\n  const _filter = options.filter;\n  const filter = typeof _filter === \"string\" ? (name) => name.startsWith(_filter) : _filter;\n  const _tag = options.tag ? `[${options.tag}] ` : \"\";\n  const logPrefix = (event) => _tag + event.name + \"\".padEnd(event._id, \"\\0\");\n  const _idCtr = {};\n  const unsubscribeBefore = hooks.beforeEach((event) => {\n    if (filter !== void 0 && !filter(event.name)) {\n      return;\n    }\n    _idCtr[event.name] = _idCtr[event.name] || 0;\n    event._id = _idCtr[event.name]++;\n    console.time(logPrefix(event));\n  });\n  const unsubscribeAfter = hooks.afterEach((event) => {\n    if (filter !== void 0 && !filter(event.name)) {\n      return;\n    }\n    if (options.group) {\n      console.groupCollapsed(event.name);\n    }\n    if (options.inspect) {\n      console.timeLog(logPrefix(event), event.args);\n    } else {\n      console.timeEnd(logPrefix(event));\n    }\n    if (options.group) {\n      console.groupEnd();\n    }\n    _idCtr[event.name]--;\n  });\n  return {\n    /** Stop debugging and remove listeners */\n    close: () => {\n      unsubscribeBefore();\n      unsubscribeAfter();\n    }\n  };\n}\n\nexport { Hookable, createDebugger, createHooks, flatHooks, mergeHooks, parallelCaller, serial, serialCaller };\n","const getDefaultsFromPostinstall = () => (undefined);\nexport { getDefaultsFromPostinstall };","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\n// TODO(dlarocque): Define this as a class, since we no longer target ES5.\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\nimport { getDefaultsFromPostinstall } from './postinstall';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromPostinstall() ||\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promisified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks whether host is a cloud workstation or not.\n * @public\n */\nexport function isCloudWorkstation(url: string): boolean {\n  // `isCloudWorkstation` is called without protocol in certain connect*Emulator functions\n  // In HTTP request builders, it's called with the protocol.\n  // If called with protocol prefix, it's a valid URL, so we extract the hostname\n  // If called without, we assume the string is the hostname.\n  try {\n    const host =\n      url.startsWith('http://') || url.startsWith('https://')\n        ? new URL(url).hostname\n        : url;\n    return host.endsWith('.cloudworkstations.dev');\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Makes a fetch request to the given server.\n * Mostly used for forwarding cookies in Firebase Studio.\n * @public\n */\nexport async function pingServer(endpoint: string): Promise<boolean> {\n  const result = await fetch(endpoint, {\n    credentials: 'include'\n  });\n  return result.ok;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\nimport { isCloudWorkstation } from './url';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n\ninterface EmulatorStatusMap {\n  [name: string]: boolean;\n}\nconst emulatorStatus: EmulatorStatusMap = {};\n\ninterface EmulatorSummary {\n  prod: string[];\n  emulator: string[];\n}\n\n// Checks whether any products are running on an emulator\nfunction getEmulatorSummary(): EmulatorSummary {\n  const summary: EmulatorSummary = {\n    prod: [],\n    emulator: []\n  };\n  for (const key of Object.keys(emulatorStatus)) {\n    if (emulatorStatus[key]) {\n      summary.emulator.push(key);\n    } else {\n      summary.prod.push(key);\n    }\n  }\n  return summary;\n}\n\nfunction getOrCreateEl(id: string): { created: boolean; element: HTMLElement } {\n  let parentDiv = document.getElementById(id);\n  let created = false;\n  if (!parentDiv) {\n    parentDiv = document.createElement('div');\n    parentDiv.setAttribute('id', id);\n    created = true;\n  }\n  return { created, element: parentDiv };\n}\n\nlet previouslyDismissed = false;\n/**\n * Updates Emulator Banner. Primarily used for Firebase Studio\n * @param name\n * @param isRunningEmulator\n * @public\n */\nexport function updateEmulatorBanner(\n  name: string,\n  isRunningEmulator: boolean\n): void {\n  if (\n    typeof window === 'undefined' ||\n    typeof document === 'undefined' ||\n    !isCloudWorkstation(window.location.host) ||\n    emulatorStatus[name] === isRunningEmulator ||\n    emulatorStatus[name] || // If already set to use emulator, can't go back to prod.\n    previouslyDismissed\n  ) {\n    return;\n  }\n\n  emulatorStatus[name] = isRunningEmulator;\n\n  function prefixedId(id: string): string {\n    return `__firebase__banner__${id}`;\n  }\n  const bannerId = '__firebase__banner';\n  const summary = getEmulatorSummary();\n  const showError = summary.prod.length > 0;\n\n  function tearDown(): void {\n    const element = document.getElementById(bannerId);\n    if (element) {\n      element.remove();\n    }\n  }\n\n  function setupBannerStyles(bannerEl: HTMLElement): void {\n    bannerEl.style.display = 'flex';\n    bannerEl.style.background = '#7faaf0';\n    bannerEl.style.position = 'fixed';\n    bannerEl.style.bottom = '5px';\n    bannerEl.style.left = '5px';\n    bannerEl.style.padding = '.5em';\n    bannerEl.style.borderRadius = '5px';\n    bannerEl.style.alignItems = 'center';\n  }\n\n  function setupIconStyles(prependIcon: SVGElement, iconId: string): void {\n    prependIcon.setAttribute('width', '24');\n    prependIcon.setAttribute('id', iconId);\n    prependIcon.setAttribute('height', '24');\n    prependIcon.setAttribute('viewBox', '0 0 24 24');\n    prependIcon.setAttribute('fill', 'none');\n    prependIcon.style.marginLeft = '-6px';\n  }\n\n  function setupCloseBtn(): HTMLSpanElement {\n    const closeBtn = document.createElement('span');\n    closeBtn.style.cursor = 'pointer';\n    closeBtn.style.marginLeft = '16px';\n    closeBtn.style.fontSize = '24px';\n    closeBtn.innerHTML = ' &times;';\n    closeBtn.onclick = () => {\n      previouslyDismissed = true;\n      tearDown();\n    };\n    return closeBtn;\n  }\n\n  function setupLinkStyles(\n    learnMoreLink: HTMLAnchorElement,\n    learnMoreId: string\n  ): void {\n    learnMoreLink.setAttribute('id', learnMoreId);\n    learnMoreLink.innerText = 'Learn more';\n    learnMoreLink.href =\n      'https://firebase.google.com/docs/studio/preview-apps#preview-backend';\n    learnMoreLink.setAttribute('target', '__blank');\n    learnMoreLink.style.paddingLeft = '5px';\n    learnMoreLink.style.textDecoration = 'underline';\n  }\n\n  function setupDom(): void {\n    const banner = getOrCreateEl(bannerId);\n    const firebaseTextId = prefixedId('text');\n    const firebaseText: HTMLSpanElement =\n      document.getElementById(firebaseTextId) || document.createElement('span');\n    const learnMoreId = prefixedId('learnmore');\n    const learnMoreLink: HTMLAnchorElement =\n      (document.getElementById(learnMoreId) as HTMLAnchorElement) ||\n      document.createElement('a');\n    const prependIconId = prefixedId('preprendIcon');\n    const prependIcon: SVGElement =\n      (document.getElementById(\n        prependIconId\n      ) as HTMLOrSVGElement as SVGElement) ||\n      document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    if (banner.created) {\n      // update styles\n      const bannerEl = banner.element;\n      setupBannerStyles(bannerEl);\n      setupLinkStyles(learnMoreLink, learnMoreId);\n      const closeBtn = setupCloseBtn();\n      setupIconStyles(prependIcon, prependIconId);\n      bannerEl.append(prependIcon, firebaseText, learnMoreLink, closeBtn);\n      document.body.appendChild(bannerEl);\n    }\n\n    if (showError) {\n      firebaseText.innerText = `Preview backend disconnected.`;\n      prependIcon.innerHTML = `<g clip-path=\"url(#clip0_6013_33858)\">\n<path d=\"M4.8 17.6L12 5.6L19.2 17.6H4.8ZM6.91667 16.4H17.0833L12 7.93333L6.91667 16.4ZM12 15.6C12.1667 15.6 12.3056 15.5444 12.4167 15.4333C12.5389 15.3111 12.6 15.1667 12.6 15C12.6 14.8333 12.5389 14.6944 12.4167 14.5833C12.3056 14.4611 12.1667 14.4 12 14.4C11.8333 14.4 11.6889 14.4611 11.5667 14.5833C11.4556 14.6944 11.4 14.8333 11.4 15C11.4 15.1667 11.4556 15.3111 11.5667 15.4333C11.6889 15.5444 11.8333 15.6 12 15.6ZM11.4 13.6H12.6V10.4H11.4V13.6Z\" fill=\"#212121\"/>\n</g>\n<defs>\n<clipPath id=\"clip0_6013_33858\">\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\n</clipPath>\n</defs>`;\n    } else {\n      prependIcon.innerHTML = `<g clip-path=\"url(#clip0_6083_34804)\">\n<path d=\"M11.4 15.2H12.6V11.2H11.4V15.2ZM12 10C12.1667 10 12.3056 9.94444 12.4167 9.83333C12.5389 9.71111 12.6 9.56667 12.6 9.4C12.6 9.23333 12.5389 9.09444 12.4167 8.98333C12.3056 8.86111 12.1667 8.8 12 8.8C11.8333 8.8 11.6889 8.86111 11.5667 8.98333C11.4556 9.09444 11.4 9.23333 11.4 9.4C11.4 9.56667 11.4556 9.71111 11.5667 9.83333C11.6889 9.94444 11.8333 10 12 10ZM12 18.4C11.1222 18.4 10.2944 18.2333 9.51667 17.9C8.73889 17.5667 8.05556 17.1111 7.46667 16.5333C6.88889 15.9444 6.43333 15.2611 6.1 14.4833C5.76667 13.7056 5.6 12.8778 5.6 12C5.6 11.1111 5.76667 10.2833 6.1 9.51667C6.43333 8.73889 6.88889 8.06111 7.46667 7.48333C8.05556 6.89444 8.73889 6.43333 9.51667 6.1C10.2944 5.76667 11.1222 5.6 12 5.6C12.8889 5.6 13.7167 5.76667 14.4833 6.1C15.2611 6.43333 15.9389 6.89444 16.5167 7.48333C17.1056 8.06111 17.5667 8.73889 17.9 9.51667C18.2333 10.2833 18.4 11.1111 18.4 12C18.4 12.8778 18.2333 13.7056 17.9 14.4833C17.5667 15.2611 17.1056 15.9444 16.5167 16.5333C15.9389 17.1111 15.2611 17.5667 14.4833 17.9C13.7167 18.2333 12.8889 18.4 12 18.4ZM12 17.2C13.4444 17.2 14.6722 16.6944 15.6833 15.6833C16.6944 14.6722 17.2 13.4444 17.2 12C17.2 10.5556 16.6944 9.32778 15.6833 8.31667C14.6722 7.30555 13.4444 6.8 12 6.8C10.5556 6.8 9.32778 7.30555 8.31667 8.31667C7.30556 9.32778 6.8 10.5556 6.8 12C6.8 13.4444 7.30556 14.6722 8.31667 15.6833C9.32778 16.6944 10.5556 17.2 12 17.2Z\" fill=\"#212121\"/>\n</g>\n<defs>\n<clipPath id=\"clip0_6083_34804\">\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\n</clipPath>\n</defs>`;\n      firebaseText.innerText = 'Preview backend running in this workspace.';\n    }\n    firebaseText.setAttribute('id', firebaseTextId);\n  }\n  if (document.readyState === 'loading') {\n    window.addEventListener('DOMContentLoaded', setupDom);\n  } else {\n    setupDom();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Type placeholder for `WorkerGlobalScope` from `webworker`\n */\ndeclare class WorkerGlobalScope {}\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment.\n * Note: This will return true for certain test frameworks that are incompletely\n * mimicking a browser, and should not lead to assuming all browser APIs are\n * available.\n */\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined' || isWebWorker();\n}\n\n/**\n * Detect Web Worker context.\n */\nexport function isWebWorker(): boolean {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    typeof self !== 'undefined' &&\n    self instanceof WorkerGlobalScope\n  );\n}\n\n/**\n * Detect Cloudflare Worker context.\n */\nexport function isCloudflareWorker(): boolean {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.userAgent === 'Cloudflare-Workers'\n  );\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/** Returns true if we are running in Safari or WebKit */\nexport function isSafariOrWebkit(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    (navigator.userAgent.includes('Safari') ||\n      navigator.userAgent.includes('WebKit')) &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // TypeScript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    // TODO(dlarocque): Replace this with `new.target`: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n    //                   which we can now use since we no longer target ES5.\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber synchronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide multiple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide multiple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance!);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance!, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance!\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp | null | undefined\n): obj is FirebaseServerApp {\n  if (obj === null || obj === undefined) {\n    return false;\n  }\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport {\n  deepEqual,\n  getDefaultAppConfig,\n  isBrowser,\n  isWebWorker\n} from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: true,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser() && !isWebWorker()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = true;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\nimport { logger } from './logger';\n\nconst MAX_HEADER_BYTES = 1024;\nexport const MAX_NUM_STORED_HEARTBEATS = 30;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (heartbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    try {\n      const platformLogger = this.container\n        .getProvider('platform-logger')\n        .getImmediate();\n\n      // This is the \"Firebase user agent\" string from the platform logger\n      // service, not the browser user agent.\n      const agent = platformLogger.getPlatformInfoString();\n      const date = getUTCDateString();\n      if (this._heartbeatsCache?.heartbeats == null) {\n        this._heartbeatsCache = await this._heartbeatsCachePromise;\n        // If we failed to construct a heartbeats cache, then return immediately.\n        if (this._heartbeatsCache?.heartbeats == null) {\n          return;\n        }\n      }\n      // Do not store a heartbeat if one is already stored for this day\n      // or if a header has already been sent today.\n      if (\n        this._heartbeatsCache.lastSentHeartbeatDate === date ||\n        this._heartbeatsCache.heartbeats.some(\n          singleDateHeartbeat => singleDateHeartbeat.date === date\n        )\n      ) {\n        return;\n      } else {\n        // There is no entry for this date. Create one.\n        this._heartbeatsCache.heartbeats.push({ date, agent });\n\n        // If the number of stored heartbeats exceeds the maximum number of stored heartbeats, remove the heartbeat with the earliest date.\n        // Since this is executed each time a heartbeat is pushed, the limit can only be exceeded by one, so only one needs to be removed.\n        if (\n          this._heartbeatsCache.heartbeats.length > MAX_NUM_STORED_HEARTBEATS\n        ) {\n          const earliestHeartbeatIdx = getEarliestHeartbeatIdx(\n            this._heartbeatsCache.heartbeats\n          );\n          this._heartbeatsCache.heartbeats.splice(earliestHeartbeatIdx, 1);\n        }\n      }\n\n      return this._storage.overwrite(this._heartbeatsCache);\n    } catch (e) {\n      logger.warn(e);\n    }\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    try {\n      if (this._heartbeatsCache === null) {\n        await this._heartbeatsCachePromise;\n      }\n      // If it's still null or the array is empty, there is no data to send.\n      if (\n        this._heartbeatsCache?.heartbeats == null ||\n        this._heartbeatsCache.heartbeats.length === 0\n      ) {\n        return '';\n      }\n      const date = getUTCDateString();\n      // Extract as many heartbeats from the cache as will fit under the size limit.\n      const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n        this._heartbeatsCache.heartbeats\n      );\n      const headerString = base64urlEncodeWithoutPadding(\n        JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n      );\n      // Store last sent date to prevent another being logged/sent for the same day.\n      this._heartbeatsCache.lastSentHeartbeatDate = date;\n      if (unsentEntries.length > 0) {\n        // Store any unsent entries if they exist.\n        this._heartbeatsCache.heartbeats = unsentEntries;\n        // This seems more likely than emptying the array (below) to lead to some odd state\n        // since the cache isn't empty and this will be called again on the next request,\n        // and is probably safest if we await it.\n        await this._storage.overwrite(this._heartbeatsCache);\n      } else {\n        this._heartbeatsCache.heartbeats = [];\n        // Do not wait for this, to reduce latency.\n        void this._storage.overwrite(this._heartbeatsCache);\n      }\n      return headerString;\n    } catch (e) {\n      logger.warn(e);\n      return '';\n    }\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n\n/**\n * Returns the index of the heartbeat with the earliest date.\n * If the heartbeats array is empty, -1 is returned.\n */\nexport function getEarliestHeartbeatIdx(\n  heartbeats: SingleDateHeartbeat[]\n): number {\n  if (heartbeats.length === 0) {\n    return -1;\n  }\n\n  let earliestHeartbeatIdx = 0;\n  let earliestHeartbeatDate = heartbeats[0].date;\n\n  for (let i = 1; i < heartbeats.length; i++) {\n    if (heartbeats[i].date < earliestHeartbeatDate) {\n      earliestHeartbeatDate = heartbeats[i].date;\n      earliestHeartbeatIdx = i;\n    }\n  }\n\n  return earliestHeartbeatIdx;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n"],"names":["flatHooks","configHooks","hooks","parentName","key","subHook","name","defaultTask","run","function_","_createTask","createTask","console","serialTaskCaller","args","shift","task","reduce","promise","hookFunction","then","Promise","resolve","parallelTaskCaller","all","map","hook","callEachWith","callbacks","arg0","callback","Hookable","constructor","this","_hooks","_before","_after","_deprecatedMessages","_deprecatedHooks","bind","callHook","callHookWith","options","originalName","dep","to","allowDeprecated","message","Set","has","warn","add","Object","defineProperty","get","replace","configurable","_unused","push","removeHook","hookOnce","_unreg","_function","arguments_","index","indexOf","splice","length","deprecateHook","deprecated","deprecateHooks","deprecatedHooks","assign","addHooks","removeFns","keys","unreg","removeHooks","removeAllHooks","unshift","callHookParallel","caller","event","context","result","finally","beforeEach","afterEach","createHooks","getDefaultsFromPostinstall","stringToByteArray$1","str","out","p","i","c","charCodeAt","byteArrayToString","bytes","pos","c1","String","fromCharCode","c2","c3","c4","u","join","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","charAt","haveByte4","byte4","DecodeBase64StringError","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","base64Decode","e","error","getGlobal","self","window","global","getDefaultsFromGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromEnvVariable","process","defaultsJsonString","JSON","parse","getDefaultsFromCookie","document","match","cookie","decoded","getDefaults","info","getDefaultEmulatorHost","productName","_a","_b","emulatorHosts","getDefaultAppConfig","config","getExperimentalSetting","Deferred","reject","wrapCallback","value","catch","isCloudWorkstation","url","host","startsWith","URL","hostname","endsWith","async","pingServer","endpoint","fetch","credentials","ok","emulatorStatus","getEmulatorSummary","summary","prod","emulator","getOrCreateEl","id","parentDiv","getElementById","created","createElement","setAttribute","element","previouslyDismissed","updateEmulatorBanner","isRunningEmulator","location","prefixedId","bannerId","showError","tearDown","remove","setupBannerStyles","bannerEl","style","display","background","position","bottom","left","padding","borderRadius","alignItems","setupIconStyles","prependIcon","iconId","marginLeft","setupCloseBtn","closeBtn","cursor","fontSize","innerHTML","onclick","setupLinkStyles","learnMoreLink","learnMoreId","innerText","href","paddingLeft","textDecoration","setupDom","banner","firebaseTextId","firebaseText","prependIconId","createElementNS","append","body","appendChild","readyState","addEventListener","getUA","navigator","isMobileCordova","test","isCloudflareWorker","userAgent","isBrowserExtension","runtime","chrome","browser","undefined","isReactNative","isIE","ua","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","ERROR_NAME","FirebaseError","code","customData","super","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","replaceTemplate","fullMessage","PATTERN","_","isEmpty","obj","hasOwnProperty","call","deepEqual","a","b","aKeys","bKeys","k","includes","aProp","bProp","isObject","thing","querystring","querystringParams","params","entries","forEach","arrayVal","encodeURIComponent","querystringDecode","tokens","split","token","decodeURIComponent","extractQuerystring","queryStart","fragmentStart","substring","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","observers","unsubscribes","observerCount","finalized","next","forEachObserver","observer","complete","nextOrObserver","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","fn","sendOne","err","methods","method","getModularInstance","_delegate","Component","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME","Provider","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","optional","getComponent","setComponent","isComponentEager","instanceDeferred","clearInstance","delete","services","from","values","filter","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","normalizedDeferredIdentifier","onInit","existingCallbacks","existingInstance","invokeOnInitCallbacks","normalizeIdentifierForFactory","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","now","Date","toISOString","Logger","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","debug","log","registerVersion","version","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","logString","logger","PLATFORM_LOG_STRING","name$q","name$p","name$n","name$o","name$l","name$m","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$1","name$2","_apps","_serverApps","_components","_addComponent","app","_registerComponent","componentName","serverApp","_getProvider","heartbeatController","triggerHeartbeat","_isFirebaseServerApp","settings","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","SDK_VERSION","initializeApp","rawConfig","existingApp","newApp","getApp","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","db","oldVersion","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","tx","transaction","objectStore","computeKey","done","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","MAX_HEADER_BYTES","MAX_NUM_STORED_HEARTBEATS","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","platformLogger","agent","date","getUTCDateString","heartbeats","lastSentHeartbeatDate","some","singleDateHeartbeat","earliestHeartbeatIdx","getEarliestHeartbeatIdx","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","extractHeartbeatsForHeader","headerString","stringify","today","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","earliestHeartbeatDate","registerCoreComponents","version$1"],"sourceRoot":""}